//hotel.h
#include "hall.h"
#include "hotelManager.h"
#include "package.h"
#include "reservation.h"
#define SIZE1 2
#define SIZE2 3
#define SIZE3 2
#define SIZE4 2

class hotelManager; //forward declaration 


class hotel{
  private:
    int HotelID;
    char Hotel_Name[25];
    char H_Address[50];
    int Hotel_number;

    hall *Hall[SIZE1];           //composition | ok
    hotelManager *HM[SIZE2];     //bi-association | ok
    package *PKG[SIZE3];         //uni-association | ok
    reservation *RSV[SIZE4];     //composition | ok

  public:
    hotel();
    hotel(int hotelid, char hotelname[], char hoteladdress[],int hotelno);
    void displayDetails();
    ~hotel(); 
};
//hotel.cpp
#include <iostream>
#include <cstring>
#include "hotel.h"
using namespace std;

hotel::hotel(){
  HotelID=0;
  strcpy(Hotel_Name,"");
  strcpy(H_Address,"");
  Hotel_number=0;

  Hall[0]=new hall();
  Hall[1]=new hall();

  RSV[0]=new reservation();
  RSV[1]=new reservation();
}
hotel::hotel(int hotelid, char hotelname[], char hoteladdress[],int hotelno){
  HotelID=hotelid;
  strcpy(Hotel_Name,hotelname);
  strcpy(H_Address,hoteladdress);
  Hotel_number=hotelno;
}

void hotel::displayDetails(){
  cout << HotelID << endl;
  cout << Hotel_Name << endl;
  cout << H_Address << endl;
  cout << Hotel_number << endl;
  cout << endl;
}

hotel::~hotel(){
  cout<<"Hotel class destructor executed"<<endl;
  for(int i=0;i<SIZE1;i++){
    delete Hall[SIZE1];
  }
  for(int i=0;i<SIZE4;i++){
    delete RSV[SIZE4];
  }
}
